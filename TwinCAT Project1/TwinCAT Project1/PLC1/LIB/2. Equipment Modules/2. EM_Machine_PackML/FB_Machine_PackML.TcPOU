<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Machine_PackML" Id="{0c96e239-3c9c-460c-9e1c-00915d2351c7}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Machine_PackML IMPLEMENTS ITF_PackML
VAR
	fbPackML_mem 	: STRUCT_Machine_PackML;
	StepSwitch		: E_State_PackML;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*
$$$$$$$$\                                                                   $$\       $$$$$$$$\                     $$\                                         $$\                     
$$  _____|                                                                  $$ |      $$  _____|                    \__|                                        \__|                    
$$ |   $$$$$$\   $$$$$$\  $$$$$$$\  $$\  $$\  $$\  $$$$$$\   $$$$$$\   $$$$$$$ |      $$ |      $$$$$$$\   $$$$$$\  $$\ $$$$$$$\   $$$$$$\   $$$$$$\   $$$$$$\  $$\ $$$$$$$\   $$$$$$\  
$$$$$\ \____$$\ $$  __$$\ $$  __$$\ $$ | $$ | $$ |$$  __$$\ $$  __$$\ $$  __$$ |      $$$$$\    $$  __$$\ $$  __$$\ $$ |$$  __$$\ $$  __$$\ $$  __$$\ $$  __$$\ $$ |$$  __$$\ $$  __$$\ 
$$  __|$$$$$$$ |$$ |  \__|$$ |  $$ |$$ | $$ | $$ |$$ /  $$ |$$ /  $$ |$$ /  $$ |      $$  __|   $$ |  $$ |$$ /  $$ |$$ |$$ |  $$ |$$$$$$$$ |$$$$$$$$ |$$ |  \__|$$ |$$ |  $$ |$$ /  $$ |
$$ |  $$  __$$ |$$ |      $$ |  $$ |$$ | $$ | $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |      $$ |      $$ |  $$ |$$ |  $$ |$$ |$$ |  $$ |$$   ____|$$   ____|$$ |      $$ |$$ |  $$ |$$ |  $$ |
$$ |  \$$$$$$$ |$$ |      $$ |  $$ |\$$$$$\$$$$  |\$$$$$$  |\$$$$$$  |\$$$$$$$ |      $$$$$$$$\ $$ |  $$ |\$$$$$$$ |$$ |$$ |  $$ |\$$$$$$$\ \$$$$$$$\ $$ |      $$ |$$ |  $$ |\$$$$$$$ |
\__|   \_______|\__|      \__|  \__| \_____\____/  \______/  \______/  \_______|      \________|\__|  \__| \____$$ |\__|\__|  \__| \_______| \_______|\__|      \__|\__|  \__| \____$$ |
                                                                                                          $$\   $$ |                                                          $$\   $$ |
                                                                                                          \$$$$$$  |                                                          \$$$$$$  |
                                                                                                           \______/                                                            \______/ 
*)

CASE StepSwitch OF
	E_State_PackML.IDLE 			: 
		//HAPPY FLOW		
		IF fbPackML_mem.Start AND fbPackML_mem.Abort = FALSE THEN
			StepSwitch := E_State_PackML.STARTING;
		END_IF
		
		//EXEPTION HANDLING
		IF fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.ABORTING;
		END_IF
		IF (fbPackML_mem.Stop := TRUE) THEN
			StepSwitch:= E_State_PackML.STOPPING;
		END_IF
	
	E_State_PackML.STARTING 		:
		//HAPPY FLOW		
		IF fbPackML_mem.Starting_SC AND NOT fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.IDLE;
		END_IF
		
		//EXEPTION HANDLING
		IF fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.ABORTING;
		END_IF
		IF fbPackML_mem.Stop THEN
			StepSwitch:= E_State_PackML.STOPPING;
		END_IF
	
	E_State_PackML.EXECUTE 			: 
		//HAPPY FLOW		
		IF (fbPackML_mem.Execute_SC) AND (NOT fbPackML_mem.Abort) THEN
			StepSwitch:= E_State_PackML.IDLE;
		END_IF
		
		IF fbPackML_mem.Hold THEN
			StepSwitch:= E_State_PackML.HOLDING;
		END_IF
		
		IF fbPackML_mem.Suspend THEN
			StepSwitch := E_State_PackML.SUSPENDED;
		END_IF
		
		//EXEPTION HANDLING
		IF fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.ABORTING;
		END_IF
		IF fbPackML_mem.Stop THEN
			StepSwitch:= E_State_PackML.STOPPING;
		END_IF
	
	E_State_PackML.COMPLETE 		:
		//HAPPY FLOW
		StepSwitch:= E_State_PackML.RESETTING;
	
	E_State_PackML.RESETTING 		:
		//HAPPY FLOW		
		IF fbPackML_mem.Resetting_SC AND NOT fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.IDLE;
		END_IF
		
		//EXEPTION HANDLING
		IF fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.ABORTING;
		END_IF
		IF fbPackML_mem.Stop THEN
			StepSwitch:= E_State_PackML.STOPPING;
		END_IF
	
	E_State_PackML.HOLDING 			:
		//HAPPY FLOW		
		IF fbPackML_mem.Holding_SC AND NOT fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.HELD;
		END_IF
		
		//EXEPTION HANDLING
		IF fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.ABORTING;
		END_IF
		IF fbPackML_mem.Stop THEN
			StepSwitch:= E_State_PackML.STOPPING;
		END_IF
		
	
	E_State_PackML.HELD 			:
		//HAPPY FLOW		
		IF fbPackML_mem.Unhold AND NOT fbPackML_mem.Abort THEN
			StepSwitch := E_State_PackML.UNHOLDING;
		END_IF
		
		//EXEPTION HANDLING
		IF fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.ABORTING;
		END_IF
		IF fbPackML_mem.Stop THEN
			StepSwitch:= E_State_PackML.STOPPING;
		END_IF
	
	E_State_PackML.UNHOLDING 		:
		//HAPPY FLOW		
		IF fbPackML_mem.Unholding_SC AND NOT fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.EXECUTE;
		END_IF
		
		//EXEPTION HANDLING
		IF fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.ABORTING;
		END_IF
		IF fbPackML_mem.Stop THEN
			StepSwitch:= E_State_PackML.STOPPING;
		END_IF
	
	E_State_PackML.SUSPENDING 		:
		//HAPPY FLOW		
		IF fbPackML_mem.Suspending_SC AND NOT fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.SUSPENDED;
		END_IF
		
		//EXEPTION HANDLING
		IF fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.ABORTING;
		END_IF
		IF fbPackML_mem.Stop THEN
			StepSwitch:= E_State_PackML.STOPPING;
		END_IF
	
	
	E_State_PackML.SUSPENDED 		:
		//HAPPY FLOW		
		IF fbPackML_mem.Unsuspend AND NOT fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.UNSUSPENDING;
		END_IF
		
		//EXEPTION HANDLING
		IF fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.ABORTING;
		END_IF
		IF fbPackML_mem.Stop THEN
			StepSwitch:= E_State_PackML.STOPPING;
		END_IF
	
	E_State_PackML.UNSUSPENDING 	:
		//HAPPY FLOW		
		IF fbPackML_mem.Unsuspending_SC AND NOT fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.EXECUTE;
		END_IF
		
		//EXEPTION HANDLING
		IF fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.ABORTING;
		END_IF
		IF fbPackML_mem.Stop THEN
			StepSwitch:= E_State_PackML.STOPPING;
		END_IF
	
	E_State_PackML.ABORTED			:
		//HAPPY FLOW		
		IF fbPackML_mem.Clear THEN
			StepSwitch:= E_State_PackML.CLEARING;
		END_IF
	
		
	E_State_PackML.ABORTING			:
		//HAPPY FLOW		
		IF fbPackML_mem.Aborting_SC THEN
			StepSwitch:= E_State_PackML.ABORTED;
		END_IF
	
		
	E_State_PackML.CLEARING 		:
		//HAPPY FLOW		
		IF fbPackML_mem.Clearing_SC THEN
			StepSwitch:= E_State_PackML.STOPPED;
		END_IF
		
		//EXEPTION HANDLING
		IF fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.ABORTING;
		END_IF
		
		
	E_State_PackML.STOPPING 		:
		//HAPPY FLOW
		IF fbPackML_mem.Stopping_SC THEN
			StepSwitch:= E_State_PackML.STOPPED;
		END_IF
		
		//EXEPTION HANDLING
		IF fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.ABORTING;
		END_IF
		
	
	E_State_PackML.STOPPED 			: 
		//HAPPY FLOW
		IF fbPackML_mem.Reset AND NOT fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.RESETTING;
		END_IF
		
		//EXEPTION HANDLING
		IF fbPackML_mem.Abort THEN
			StepSwitch:= E_State_PackML.ABORTING;
		END_IF
		IF fbPackML_mem.Stop THEN
			StepSwitch:= E_State_PackML.STOPPING;
		END_IF
END_CASE

// Set variables FALSE
(*
fbPackML_mem.Abort 			:= FALSE;
fbPackML_mem.Aborting_SC 	:= FALSE;
fbPackML_mem.Clear 			:= FALSE;
fbPackML_mem.Clearing_SC 	:= FALSE;
fbPackML_mem.Execute_SC 	:= FALSE;
fbPackML_mem.Completing_SC	:= FALSE;
fbPackML_mem.Hold 			:= FALSE;
fbPackML_mem.Holding_SC 	:= FALSE;
fbPackML_mem.Reset 			:= FALSE;
fbPackML_mem.Resetting_SC 	:= FALSE;
fbPackML_mem.Start 			:= FALSE;
fbPackML_mem.Starting_SC 	:= FALSE;
fbPackML_mem.Stop 			:= FALSE;
fbPackML_mem.Stopping_SC 	:= FALSE;
fbPackML_mem.Suspend 		:= FALSE;
fbPackML_mem.Suspending_SC 	:= FALSE;
fbPackML_mem.Unhold 		:= FALSE;
fbPackML_mem.Unholding_SC 	:= FALSE;
fbPackML_mem.Unsuspend 		:= FALSE;
*)
]]></ST>
    </Implementation>
    <Folder Name="Methods" Id="{2692b1a7-7f53-4742-a95e-2de0b3b517e3}" />
    <Folder Name="Properties" Id="{1a61ffe0-5fe7-40e0-82ae-dc75e0516d06}" />
    <Method Name="Abort" Id="{f54c4955-f87f-4f9d-b8f3-bf920c7f1f19}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Abort : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Abort := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Aborting_SC" Id="{04f7a340-07ce-4550-a297-6365020cae9c}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Aborting_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Aborting_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clear" Id="{19faf436-3dfb-49ce-a1be-52e303b50fe9}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Clear : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Clear := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clearing_SC" Id="{a3a1e9e6-1ecd-4c49-958e-0c463acf4b66}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Clearing_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Clearing_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Completing_SC" Id="{96703eb6-3dea-42f7-844c-ccca82149153}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Completing_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Completing_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Execute_SC" Id="{552d28e1-2a4a-438d-b0d0-e030a6105e9e}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Execute_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Execute_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{4f45a115-64eb-494d-9b45-2bd5fe373af9}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD FB_init : BOOL
VAR_INPUT
	(* if TRUE, the retain variables are initialized (warm start / cold start)*)
	bInitRetains	: BOOL;
	(* if TRUE, the instance afterwards gets moved into the copy code (online change)*)
	bInCopyCode	: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Hold" Id="{53575ac9-3a8d-42b2-afb7-3be0abd62695}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Hold : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Hold := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Holding_SC" Id="{9ae2709c-0e37-45ea-b5da-84a1eeff22f3}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Holding_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Holding_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Reset" Id="{cd5e9997-ff8e-4d31-a085-f9181e576959}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Reset : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Reset := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Resetting_SC" Id="{55276bc5-a368-48f5-b0f2-4f72d7eb9eee}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Resetting_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Resetting_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Start" Id="{7bd68d03-d27c-416b-b788-f67971368d7a}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Start : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Start := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Starting_SC" Id="{7d892e21-dd21-4bd9-9552-c6380a0ca1f8}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Starting_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Starting_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="State" Id="{12585bee-b7dc-4602-a0af-aedb1f7976dd}" FolderPath="Properties\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY State : E_State_PackML
]]></Declaration>
      <Get Name="Get" Id="{d588e31c-a050-4e65-bc7f-89fb048b795a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[State := StepSwitch;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Stop" Id="{05ea9ce5-69ee-49ab-829b-8a4fe1790d84}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Stop : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Stop := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Stopping_SC" Id="{73f5a823-5695-4d9c-aa3c-396d248d2bc3}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Stopping_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Stopping_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Suspend" Id="{483f626d-6ed8-4995-9a57-85f27a1a3922}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Suspend : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Suspend := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Suspending_SC" Id="{3e035793-32f7-4a91-9fe9-36c8acdfbdbd}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Suspending_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Suspending_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Unhold" Id="{52198064-f668-4596-a17a-dc02abffab17}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Unhold : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Unhold := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Unholding_SC" Id="{97c48902-f667-48e2-a7b4-2f07525a1e88}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Unholding_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Unholding_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Unsuspend" Id="{3ea7634e-a74f-4336-928c-2f7214c38715}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Unsuspend : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Unsuspend := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Unsuspending_SC" Id="{a78984c2-4437-4f44-b016-63a7d57366c6}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Unsuspending_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbPackML_mem.Unsuspending_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="ZeroAllVar" Id="{eff47e16-b2a4-4ccf-ac4e-cb8938c2d680}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD ZeroAllVar : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Machine_PackML">
      <LineId Id="115" Count="11" />
      <LineId Id="113" Count="1" />
      <LineId Id="60" Count="0" />
      <LineId Id="218" Count="11" />
      <LineId Id="61" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="230" Count="11" />
      <LineId Id="74" Count="2" />
      <LineId Id="244" Count="4" />
      <LineId Id="256" Count="6" />
      <LineId Id="255" Count="0" />
      <LineId Id="249" Count="5" />
      <LineId Id="242" Count="0" />
      <LineId Id="79" Count="1" />
      <LineId Id="264" Count="0" />
      <LineId Id="263" Count="0" />
      <LineId Id="81" Count="1" />
      <LineId Id="214" Count="2" />
      <LineId Id="213" Count="0" />
      <LineId Id="217" Count="0" />
      <LineId Id="206" Count="2" />
      <LineId Id="205" Count="0" />
      <LineId Id="211" Count="1" />
      <LineId Id="209" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="266" Count="11" />
      <LineId Id="84" Count="0" />
      <LineId Id="265" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="278" Count="11" />
      <LineId Id="86" Count="1" />
      <LineId Id="290" Count="11" />
      <LineId Id="93" Count="1" />
      <LineId Id="302" Count="12" />
      <LineId Id="88" Count="1" />
      <LineId Id="315" Count="11" />
      <LineId Id="92" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="327" Count="11" />
      <LineId Id="96" Count="0" />
      <LineId Id="100" Count="1" />
      <LineId Id="190" Count="2" />
      <LineId Id="189" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="204" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="183" Count="0" />
      <LineId Id="188" Count="0" />
      <LineId Id="187" Count="0" />
      <LineId Id="185" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="203" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="194" Count="2" />
      <LineId Id="193" Count="0" />
      <LineId Id="201" Count="0" />
      <LineId Id="198" Count="2" />
      <LineId Id="197" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="202" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="181" Count="0" />
      <LineId Id="167" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="173" Count="1" />
      <LineId Id="182" Count="0" />
      <LineId Id="175" Count="1" />
      <LineId Id="169" Count="0" />
      <LineId Id="177" Count="0" />
      <LineId Id="112" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="180" Count="0" />
      <LineId Id="155" Count="1" />
      <LineId Id="178" Count="1" />
      <LineId Id="159" Count="0" />
      <LineId Id="162" Count="1" />
      <LineId Id="165" Count="0" />
      <LineId Id="164" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="345" Count="0" />
      <LineId Id="344" Count="0" />
      <LineId Id="370" Count="0" />
      <LineId Id="347" Count="17" />
      <LineId Id="346" Count="0" />
      <LineId Id="371" Count="0" />
      <LineId Id="72" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Abort">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Aborting_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Clear">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Clearing_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Completing_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Execute_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.FB_init">
      <LineId Id="10" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Hold">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Holding_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Reset">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Resetting_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Start">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Starting_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.State.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Stop">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Stopping_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Suspend">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Suspending_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Unhold">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Unholding_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Unsuspend">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.Unsuspending_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Machine_PackML.ZeroAllVar">
      <LineId Id="4" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>