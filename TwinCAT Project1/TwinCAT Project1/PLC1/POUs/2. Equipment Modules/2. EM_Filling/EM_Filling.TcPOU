<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="EM_Filling" Id="{63eb49f5-59e7-4030-85dd-f42cd0c3af32}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK EM_Filling IMPLEMENTS ITF_Filling, ITF_PackMLV2
VAR
	fb_mem : STRUCT_EM_Filling;
	
	//Submodules
	EM_FillerA1				: EM_Machine;
	EM_FillerA2				: EM_Machine;
	EM_TransportFillers		: EM_Transport;
	EM_OutfeedFillers		: EM_Transport_Mechanische_Stop;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*
$$$$$$$$\                                                                   $$\       $$$$$$$$\                     $$\                                         $$\                     
$$  _____|                                                                  $$ |      $$  _____|                    \__|                                        \__|                    
$$ |   $$$$$$\   $$$$$$\  $$$$$$$\  $$\  $$\  $$\  $$$$$$\   $$$$$$\   $$$$$$$ |      $$ |      $$$$$$$\   $$$$$$\  $$\ $$$$$$$\   $$$$$$\   $$$$$$\   $$$$$$\  $$\ $$$$$$$\   $$$$$$\  
$$$$$\ \____$$\ $$  __$$\ $$  __$$\ $$ | $$ | $$ |$$  __$$\ $$  __$$\ $$  __$$ |      $$$$$\    $$  __$$\ $$  __$$\ $$ |$$  __$$\ $$  __$$\ $$  __$$\ $$  __$$\ $$ |$$  __$$\ $$  __$$\ 
$$  __|$$$$$$$ |$$ |  \__|$$ |  $$ |$$ | $$ | $$ |$$ /  $$ |$$ /  $$ |$$ /  $$ |      $$  __|   $$ |  $$ |$$ /  $$ |$$ |$$ |  $$ |$$$$$$$$ |$$$$$$$$ |$$ |  \__|$$ |$$ |  $$ |$$ /  $$ |
$$ |  $$  __$$ |$$ |      $$ |  $$ |$$ | $$ | $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |      $$ |      $$ |  $$ |$$ |  $$ |$$ |$$ |  $$ |$$   ____|$$   ____|$$ |      $$ |$$ |  $$ |$$ |  $$ |
$$ |  \$$$$$$$ |$$ |      $$ |  $$ |\$$$$$\$$$$  |\$$$$$$  |\$$$$$$  |\$$$$$$$ |      $$$$$$$$\ $$ |  $$ |\$$$$$$$ |$$ |$$ |  $$ |\$$$$$$$\ \$$$$$$$\ $$ |      $$ |$$ |  $$ |\$$$$$$$ |
\__|   \_______|\__|      \__|  \__| \_____\____/  \______/  \______/  \_______|      \________|\__|  \__| \____$$ |\__|\__|  \__| \_______| \_______|\__|      \__|\__|  \__| \____$$ |
                                                                                                          $$\   $$ |                                                          $$\   $$ |
                                                                                                          \$$$$$$  |                                                          \$$$$$$  |
                                                                                                           \______/                                                            \______/ 
*)//********************************Initiating***********************************
fb_mem.STS.State := PackML_StateMachine(State			:= fb_mem.STS.State,
										Start           := fb_mem.CS.Start,
										Stop            := fb_mem.CS.Stop,
										Reset           := fb_mem.CS.Reset,
										Abort           := fb_mem.CS.Abort,
										Clear           := fb_mem.CS.Clear,
										UnSuspend       := fb_mem.CS.UnSuspend,
										Suspend         := fb_mem.CS.Suspend,
										UnHold          := fb_mem.CS.UnHold,
										Hold            := fb_mem.CS.Hold,
										Starting_SC     := fb_mem.STS.Starting_SC,
										Execute_SC      := fb_mem.STS.Execute_SC,
										Resetting_SC    := fb_mem.STS.Resetting_SC,
										Holding_SC      := fb_mem.STS.Holding_SC,
										Unholding_SC    := fb_mem.STS.Unholding_SC,
										Suspending_SC   := fb_mem.STS.Suspending_SC,
										Unsuspending_SC := fb_mem.STS.Unsuspending_SC,
										Aborting_SC     := fb_mem.STS.Aborting_SC,
										Clearing_SC     := fb_mem.STS.Clearing_SC,
										Stopping_SC     := fb_mem.STS.Stopping_SC);

//********************************Init***********************************
EM_FillerA1();
EM_FillerA2();	
EM_TransportFillers();
EM_OutfeedFillers();	
										
//********************************ZEROING***********************************								
fb_mem.STS.Auto 			:= FALSE;
fb_mem.STS.Manueel 			:= FALSE;
fb_mem.STS.Starting_SC 		:= FALSE;
fb_mem.STS.Execute_SC 		:= FALSE;
fb_mem.STS.Resetting_SC 	:= FALSE;
fb_mem.STS.Holding_SC 		:= FALSE;
fb_mem.STS.Unholding_SC 	:= FALSE;
fb_mem.STS.Suspending_SC 	:= FALSE;
fb_mem.STS.Unsuspending_SC 	:= FALSE;
fb_mem.STS.Aborting_SC 		:= FALSE;
fb_mem.STS.Clearing_SC 		:= FALSE;
fb_mem.STS.Stopping_SC 		:= FALSE;
fb_mem.STS.Completing_SC 	:= FALSE;

//********************************Auto manual logic***********************************
IF fb_mem.CS.Auto THEN
	fb_mem.STS.Auto := TRUE;
ELSE
	fb_mem.STS.Auto := FALSE;
END_IF

IF fb_mem.CS.Manueel THEN
	fb_mem.STS.Manueel := TRUE;
ELSE
	fb_mem.STS.Manueel := FALSE;
END_IF

//********************************Exeptionhandling***********************************

//********************************Action case***********************************
CASE fb_mem.STS.State OF
	E_State_PackML.IDLE 			: 
		//Do nothing
	E_State_PackML.STARTING 		:
		EM_FillerA1.Start();
		IF EM_FillerA1.State 			= E_State_PackML.EXECUTE THEN
			EM_FillerA2.Start();
			IF EM_FillerA2.State 			= E_State_PackML.EXECUTE THEN
				EM_TransportFillers.Start();
				IF EM_TransportFillers.State	= E_State_PackML.EXECUTE THEN
					EM_OutfeedFillers.Start();
					IF EM_OutfeedFillers.State		= E_State_PackML.EXECUTE THEN
						fb_mem.STS.Starting_SC 		:= TRUE;
					END_IF
				END_IF
			END_IF
		END_IF
	E_State_PackML.EXECUTE 			: 
		IF fb_mem.CS.Stop AND fb_mem.STS.Auto OR fb_mem.HMI.Stop AND fb_mem.STS.Manueel THEN
			EM_FillerA1.Stop();
			EM_FillerA2.Stop();
			EM_TransportFillers.Stop();
			EM_OutfeedFillers.Stop();
		END_IF
	E_State_PackML.COMPLETE 		:
		IF fb_mem.CS.Clear AND fb_mem.STS.Auto OR fb_mem.HMI.Clear AND fb_mem.STS.Manueel THEN
			fb_mem.STS.Completing_SC := TRUE;
		END_IF
	E_State_PackML.RESETTING 		:
		EM_FillerA1.Reset();
		EM_FillerA2.Reset();
		EM_TransportFillers.Reset();
		EM_OutfeedFillers.Reset();
		IF 	EM_FillerA1.State 			= E_State_PackML.IDLE AND 
			EM_FillerA2.State 			= E_State_PackML.IDLE AND 
			EM_TransportFillers.State	= E_State_PackML.IDLE AND 
			EM_OutfeedFillers.State		= E_State_PackML.IDLE THEN
				fb_mem.STS.Starting_SC 		:= TRUE;	
		END_IF
	E_State_PackML.HOLDING 			:
		EM_FillerA1.Hold();
		EM_FillerA2.Hold();
		EM_TransportFillers.Hold();
		EM_OutfeedFillers.Hold();
		IF 	EM_FillerA1.State 			= E_State_PackML.HELD AND
			EM_FillerA2.State 			= E_State_PackML.HELD AND
			EM_TransportFillers.State 	= E_State_PackML.HELD AND
			EM_OutfeedFillers.State 	= E_State_PackML.HELD THEN
				fb_mem.STS.HOLDING_SC	:= TRUE;
		END_IF
	E_State_PackML.HELD 			:
		//Do nothing
	E_State_PackML.UNHOLDING 		:
		EM_FillerA1.Unhold();
		EM_FillerA2.Unhold();
		EM_TransportFillers.Unhold();
		EM_OutfeedFillers.Unhold();
		IF 	EM_FillerA1.State 			= E_State_PackML.EXECUTE AND
			EM_FillerA2.State 			= E_State_PackML.EXECUTE AND
			EM_TransportFillers.State 	= E_State_PackML.EXECUTE AND
			EM_OutfeedFillers.State 	= E_State_PackML.EXECUTE THEN
				fb_mem.STS.UNHOLDING_SC	:= TRUE;
		END_IF;
	E_State_PackML.SUSPENDING 		:
		EM_FillerA1.Suspend();
		EM_FillerA2.Suspend();
		EM_TransportFillers.Suspend();
		EM_OutfeedFillers.Suspend();
		IF 	EM_FillerA1.State 			= E_State_PackML.SUSPENDED AND
			EM_FillerA2.State 			= E_State_PackML.SUSPENDED AND
			EM_TransportFillers.State 	= E_State_PackML.SUSPENDED AND
			EM_OutfeedFillers.State 	= E_State_PackML.SUSPENDED THEN
				fb_mem.STS.Suspending_SC	:= TRUE;
		END_IF
	E_State_PackML.SUSPENDED 		:			// TO BE PROGRAMMED
		//Do nothing
	E_State_PackML.UNSUSPENDING 	:
		EM_FillerA1.Unsuspend();
		EM_FillerA2.Unsuspend();
		EM_TransportFillers.Unsuspend();
		EM_OutfeedFillers.Unsuspend();
		IF 	EM_FillerA1.State 			= E_State_PackML.EXECUTE AND
			EM_FillerA2.State 			= E_State_PackML.EXECUTE AND
			EM_TransportFillers.State 	= E_State_PackML.EXECUTE AND
			EM_OutfeedFillers.State 	= E_State_PackML.EXECUTE THEN
				fb_mem.STS.Unsuspending_SC	:= TRUE;
		END_IF
	E_State_PackML.ABORTING			:
		EM_FillerA1.Abort();
		EM_FillerA2.Abort();
		EM_TransportFillers.Abort();
		EM_OutfeedFillers.Abort();
		IF 	EM_FillerA1.State 			= E_State_PackML.ABORTED AND
			EM_FillerA2.State 			= E_State_PackML.ABORTED AND
			EM_TransportFillers.State 	= E_State_PackML.ABORTED AND
			EM_OutfeedFillers.State 	= E_State_PackML.ABORTED THEN
				fb_mem.STS.Aborting_SC:= TRUE;
		END_IF;
	E_State_PackML.ABORTED			:
		IF fb_mem.CS.Clear AND fb_mem.STS.Auto OR fb_mem.HMI.Clear AND fb_mem.STS.Manueel THEN
			EM_FillerA1.Clear();
			EM_FillerA2.Clear();
			EM_TransportFillers.Clear();
			EM_OutfeedFillers.Clear();
		END_IF
	E_State_PackML.CLEARING 		:
		IF 	EM_FillerA1.State 			= E_State_PackML.STOPPED AND
			EM_FillerA2.State 			= E_State_PackML.STOPPED AND
			EM_TransportFillers.State 	= E_State_PackML.STOPPED AND
			EM_OutfeedFillers.State 	= E_State_PackML.STOPPED THEN
				fb_mem.STS.Clearing_SC:= TRUE;
		END_IF;
	E_State_PackML.STOPPED			:
		IF fb_mem.CS.Reset AND fb_mem.STS.Auto OR fb_mem.HMI.Reset AND fb_mem.STS.Manueel THEN
			EM_FillerA1.Reset();
			EM_FillerA2.Reset();
			EM_TransportFillers.Reset();
			EM_OutfeedFillers.Reset();
		END_IF;
	
END_CASE

//********************************HMI_Connection***********************************
fb_mem.STS.StringState     := TO_STRING(fb_mem.STS.State); 

//********************************ZEROING***********************************

fb_mem.CS.Auto            := FALSE;
fb_mem.CS.Manueel         := FALSE;
fb_mem.CS.Start           := FALSE;
fb_mem.CS.Stop            := FALSE;
fb_mem.CS.Reset           := FALSE;
fb_mem.CS.Abort           := FALSE;
fb_mem.CS.Clear           := FALSE;
fb_mem.CS.UnSuspend       := FALSE;
fb_mem.CS.Suspend         := FALSE;
fb_mem.CS.UnHold          := FALSE;
fb_mem.CS.Hold            := FALSE;]]></ST>
    </Implementation>
    <Folder Name="Methods" Id="{2cb65f53-063c-49d4-843d-6674455a915e}" />
    <Folder Name="Properties" Id="{ebdc75e3-7fe1-4b65-b735-6af8f98fcfd8}" />
    <Method Name="Abort" Id="{707c684c-3abf-48d3-9960-e1576f70a644}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Abort : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Aborting_SC" Id="{1e1aeac9-fc4f-402c-8059-38a2ea263e08}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Aborting_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clear" Id="{846080eb-5f58-436b-8b0b-2d9787f9b143}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Clear : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clearing_SC" Id="{23411263-4da2-4930-ae46-99794c66a416}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Clearing_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Completing_SC" Id="{0bd16898-2d04-4e7e-ab58-0d9f16bf87d2}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Completing_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Execute_SC" Id="{7c43486e-e389-4587-88e5-c4f78a35623f}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Execute_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{a8dc6619-ed75-4713-85c3-653324d66acd}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Hold" Id="{ef3166e8-e776-4510-a5fd-7721abe75ee2}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Hold : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Holding_SC" Id="{e03c14f5-a008-4f26-bce9-c6cf0ec22835}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Holding_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Reset" Id="{b635a72a-5a2e-495e-ada8-0bbcaa721e4b}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Reset : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Resetting_SC" Id="{8c039277-f173-422a-8c15-04a8ab5fa965}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Resetting_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Start" Id="{398c28cb-7692-4656-b32b-393ba423da8c}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Start : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Starting_SC" Id="{ab10e04c-fd49-4ce6-b30c-16624a273e48}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Starting_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Property Name="State" Id="{2501272b-2459-4173-91a1-0a813f18a888}" FolderPath="Properties\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY State : TwinCAT_LIB.E_State_PackML
]]></Declaration>
      <Get Name="Get" Id="{d9f13007-7813-4d1b-a0d8-348b1176a205}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[State := fb_mem.STS.State;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Stop" Id="{5f2e5061-9b0b-42b3-a78a-c096dd435a13}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Stop : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Stopping_SC" Id="{53640b02-c277-43d4-90c2-d66d74b7a240}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Stopping_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Suspend" Id="{cb177315-af99-4647-af9d-a9af80c91847}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Suspend : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Suspending_SC" Id="{41975971-036f-473b-ace5-9381d54b22ed}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Suspending_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Unhold" Id="{dd746614-9d03-4ec9-88a0-660deffaa15e}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Unhold : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Unholding_SC" Id="{5395d565-ec82-4d36-bc91-05e9643cc9cc}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Unholding_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Unsuspend" Id="{93369419-fed1-4a89-a4a0-a4133787fe1f}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Unsuspend : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Unsuspending_SC" Id="{012c74be-0322-4c7d-bc2e-1b60758db904}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Unsuspending_SC : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="ZeroAllVar" Id="{51794cb3-32c1-483c-8b7b-25be046025bf}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD ZeroAllVar : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="EM_Filling">
      <LineId Id="396" Count="36" />
      <LineId Id="509" Count="1" />
      <LineId Id="433" Count="34" />
      <LineId Id="511" Count="0" />
      <LineId Id="522" Count="0" />
      <LineId Id="636" Count="1" />
      <LineId Id="639" Count="1" />
      <LineId Id="642" Count="1" />
      <LineId Id="645" Count="2" />
      <LineId Id="644" Count="0" />
      <LineId Id="641" Count="0" />
      <LineId Id="513" Count="0" />
      <LineId Id="470" Count="1" />
      <LineId Id="648" Count="0" />
      <LineId Id="650" Count="1" />
      <LineId Id="653" Count="0" />
      <LineId Id="649" Count="0" />
      <LineId Id="472" Count="0" />
      <LineId Id="536" Count="1" />
      <LineId Id="473" Count="0" />
      <LineId Id="526" Count="9" />
      <LineId Id="474" Count="0" />
      <LineId Id="476" Count="0" />
      <LineId Id="538" Count="0" />
      <LineId Id="541" Count="2" />
      <LineId Id="539" Count="0" />
      <LineId Id="544" Count="2" />
      <LineId Id="540" Count="0" />
      <LineId Id="477" Count="3" />
      <LineId Id="549" Count="7" />
      <LineId Id="481" Count="0" />
      <LineId Id="557" Count="0" />
      <LineId Id="577" Count="9" />
      <LineId Id="482" Count="0" />
      <LineId Id="484" Count="2" />
      <LineId Id="569" Count="7" />
      <LineId Id="567" Count="0" />
      <LineId Id="487" Count="0" />
      <LineId Id="589" Count="9" />
      <LineId Id="488" Count="0" />
      <LineId Id="587" Count="0" />
      <LineId Id="599" Count="0" />
      <LineId Id="613" Count="0" />
      <LineId Id="615" Count="0" />
      <LineId Id="617" Count="1" />
      <LineId Id="489" Count="1" />
      <LineId Id="623" Count="4" />
      <LineId Id="621" Count="0" />
      <LineId Id="628" Count="5" />
      <LineId Id="619" Count="1" />
      <LineId Id="492" Count="16" />
      <LineId Id="340" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Abort">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Aborting_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Clear">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Clearing_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Completing_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Execute_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.FB_init">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Hold">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Holding_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Reset">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Resetting_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Start">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Starting_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.State.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Stop">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Stopping_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Suspend">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Suspending_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Unhold">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Unholding_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Unsuspend">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.Unsuspending_SC">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Filling.ZeroAllVar">
      <LineId Id="4" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>