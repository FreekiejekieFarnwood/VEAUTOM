<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="EM_Can_Supply" Id="{7d4cdf28-8942-4185-a3d0-da5253260d95}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK EM_Can_Supply IMPLEMENTS ITF_Can_Supply, ITF_PackML
VAR
	fb_mem : STRUCT_EM_CanSupply;
	
	//SubModules
	EM_Transport_Can_Supply1		: EM_Transport_Mechanische_Stop;
	EM_Transport_Can_Supply2		: EM_Transport;
	Sen_A1_Near						: CM_Sensor;
	Sen_A1_Far						: CM_Sensor;
	Sen_A2_Near						: CM_Sensor;
	Sen_A2_Far						: CM_Sensor;
	ValveDirection					: CM_Valve;  
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*
$$$$$$$$\                                                                   $$\       $$$$$$$$\                     $$\                                         $$\                     
$$  _____|                                                                  $$ |      $$  _____|                    \__|                                        \__|                    
$$ |   $$$$$$\   $$$$$$\  $$$$$$$\  $$\  $$\  $$\  $$$$$$\   $$$$$$\   $$$$$$$ |      $$ |      $$$$$$$\   $$$$$$\  $$\ $$$$$$$\   $$$$$$\   $$$$$$\   $$$$$$\  $$\ $$$$$$$\   $$$$$$\  
$$$$$\ \____$$\ $$  __$$\ $$  __$$\ $$ | $$ | $$ |$$  __$$\ $$  __$$\ $$  __$$ |      $$$$$\    $$  __$$\ $$  __$$\ $$ |$$  __$$\ $$  __$$\ $$  __$$\ $$  __$$\ $$ |$$  __$$\ $$  __$$\ 
$$  __|$$$$$$$ |$$ |  \__|$$ |  $$ |$$ | $$ | $$ |$$ /  $$ |$$ /  $$ |$$ /  $$ |      $$  __|   $$ |  $$ |$$ /  $$ |$$ |$$ |  $$ |$$$$$$$$ |$$$$$$$$ |$$ |  \__|$$ |$$ |  $$ |$$ /  $$ |
$$ |  $$  __$$ |$$ |      $$ |  $$ |$$ | $$ | $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |      $$ |      $$ |  $$ |$$ |  $$ |$$ |$$ |  $$ |$$   ____|$$   ____|$$ |      $$ |$$ |  $$ |$$ |  $$ |
$$ |  \$$$$$$$ |$$ |      $$ |  $$ |\$$$$$\$$$$  |\$$$$$$  |\$$$$$$  |\$$$$$$$ |      $$$$$$$$\ $$ |  $$ |\$$$$$$$ |$$ |$$ |  $$ |\$$$$$$$\ \$$$$$$$\ $$ |      $$ |$$ |  $$ |\$$$$$$$ |
\__|   \_______|\__|      \__|  \__| \_____\____/  \______/  \______/  \_______|      \________|\__|  \__| \____$$ |\__|\__|  \__| \_______| \_______|\__|      \__|\__|  \__| \____$$ |
                                                                                                          $$\   $$ |                                                          $$\   $$ |
                                                                                                          \$$$$$$  |                                                          \$$$$$$  |
                                                                                                           \______/                                                            \______/ 
*)//********************************Initiating***********************************
fb_mem.STS.State := PackML_StateMachine(State			:= fb_mem.STS.State,
										Start           := fb_mem.CS.Start,
										Stop            := fb_mem.CS.Stop,
										Reset           := fb_mem.CS.Reset,
										Abort           := fb_mem.CS.Abort,
										Clear           := fb_mem.CS.Clear,
										UnSuspend       := fb_mem.CS.UnSuspend,
										Suspend         := fb_mem.CS.Suspend,
										UnHold          := fb_mem.CS.UnHold,
										Hold            := fb_mem.CS.Hold,
										Starting_SC     := fb_mem.STS.Starting_SC,
										Execute_SC      := fb_mem.STS.Execute_SC,
										Resetting_SC    := fb_mem.STS.Resetting_SC,
										Holding_SC      := fb_mem.STS.Holding_SC,
										Unholding_SC    := fb_mem.STS.Unholding_SC,
										Suspending_SC   := fb_mem.STS.Suspending_SC,
										Unsuspending_SC := fb_mem.STS.Unsuspending_SC,
										Aborting_SC     := fb_mem.STS.Aborting_SC,
										Clearing_SC     := fb_mem.STS.Clearing_SC,
										Stopping_SC     := fb_mem.STS.Stopping_SC);

//********************************Init***********************************
EM_Transport_Can_Supply1();
EM_Transport_Can_Supply2();			
										
//********************************ZEROING***********************************								
fb_mem.STS.Auto 			:= FALSE;
fb_mem.STS.Manueel 			:= FALSE;
fb_mem.STS.Starting_SC 		:= FALSE;
fb_mem.STS.Execute_SC 		:= FALSE;
fb_mem.STS.Resetting_SC 	:= FALSE;
fb_mem.STS.Holding_SC 		:= FALSE;
fb_mem.STS.Unholding_SC 	:= FALSE;
fb_mem.STS.Suspending_SC 	:= FALSE;
fb_mem.STS.Unsuspending_SC 	:= FALSE;
fb_mem.STS.Aborting_SC 		:= FALSE;
fb_mem.STS.Clearing_SC 		:= FALSE;
fb_mem.STS.Stopping_SC 		:= FALSE;
fb_mem.STS.Completing_SC 	:= FALSE;

//********************************Auto manual logic***********************************
IF fb_mem.CS.Auto OR fb_mem.HMI.Auto THEN
	fb_mem.STS.Auto := TRUE;
	fb_mem.STS.Manueel := FALSE;
END_IF

IF fb_mem.CS.Manueel OR fb_mem.HMI.Manueel THEN
	fb_mem.STS.Auto := FALSE;
	fb_mem.STS.Manueel := TRUE;
END_IF

//********************Manupilatie***********8
IF fb_mem.SIM.Sen_A1_Near_TRUE THEN
	Sen_A1_Near.Output := TRUE;
END_IF
IF fb_mem.SIM.Sen_A1_Far_TRUE THEN
	Sen_A1_Far.Output := TRUE;
END_IF
IF fb_mem.SIM.Sen_A2_Near_TRUE THEN
	Sen_A2_Near.Output := TRUE;
END_IF
IF fb_mem.SIM.Sen_A2_Far_TRUE THEN
	Sen_A2_Far.Output := TRUE;
END_IF

//********************************Exeptionhandling***********************************

//********************************Action case***********************************
CASE fb_mem.STS.State OF
	E_State_PackML.IDLE 			: 
		//Do nothing
	E_State_PackML.STARTING 		:
		//Hier heen en weer swichen totdat bijden buffers vol zijn en dus alle sensoren waar zijn met filler 1 prioriteit
		ValveDirection.Close();	//Richting_L naar filler 1
		IF Sen_A1_Far.Output=TRUE AND Sen_A2_Far.Output=TRUE AND Sen_A2_Near.Output=FALSE THEN //filler 2 hoeft nog niet vol te zijn om te starten
			ValveDirection.Open();	//Richting_L naar filler 2
			fb_mem.STS.Starting_SC := TRUE;
		END_IF
	E_State_PackML.STOPPED			: // dit was execute
		//Als Sen_A1_Far AND Sen_A1_Near AND !Sen_A2_Near THEN wissel naar A2 en vise versa
		IF Sen_A1_Far.Output=TRUE AND Sen_A2_Far.Output=TRUE AND Sen_A1_Near.Output=TRUE AND Sen_A2_Near.Output=FALSE THEN
			ValveDirection.Open();	//Richting_L naar filler 2 heet open
		END_IF
		IF Sen_A1_Far.Output=TRUE AND Sen_A2_Far.Output=TRUE AND Sen_A2_Near.Output=TRUE AND Sen_A1_Near.Output=FALSE THEN
			ValveDirection.Close();	//Richting_L naar filler 1
		END_IF
		IF Sen_A1_Far.Output=FALSE THEN
			ValveDirection.Close();		//Richting_L naar filler 1 heet close
		END_IF
	E_State_PackML.COMPLETE 		:
		//Do nothing
	E_State_PackML.RESETTING 		:
		//Do nothing
	E_State_PackML.HOLDING 			:
		//Do nothing
	E_State_PackML.HELD 			:
		//Do nothing
	E_State_PackML.UNHOLDING 		:
		//Do nothing
	E_State_PackML.SUSPENDING 		:
		//Do nothing
	E_State_PackML.SUSPENDED 		:
		//Do nothing
	E_State_PackML.UNSUSPENDING 	:
		//Do nothing
	E_State_PackML.ABORTED			:
		//Do nothing
	E_State_PackML.CLEARING 		:
		//Do nothing
END_CASE

//********************************HMI_Connection***********************************
fb_mem.STS.StringState     := TO_STRING(fb_mem.STS.State); 

//********************************ZEROING***********************************

fb_mem.CS.Auto            := FALSE;
fb_mem.CS.Manueel         := FALSE;
fb_mem.CS.Start           := FALSE;
fb_mem.CS.Stop            := FALSE;
fb_mem.CS.Reset           := FALSE;
fb_mem.CS.Abort           := FALSE;
fb_mem.CS.Clear           := FALSE;
fb_mem.CS.UnSuspend       := FALSE;
fb_mem.CS.Suspend         := FALSE;
fb_mem.CS.UnHold          := FALSE;
fb_mem.CS.Hold            := FALSE;]]></ST>
    </Implementation>
    <Folder Name="Methods" Id="{36205fe7-9974-4236-80c4-92d328922c64}" />
    <Folder Name="Properties" Id="{29891b51-a7e8-4e37-9797-88f55053a09e}" />
    <Method Name="Abort" Id="{9ae06616-8598-42a0-a706-eabe119538d6}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Abort : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Abort := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Aborting_SC" Id="{1de7a9c8-59b9-42aa-b349-ad3bb6dba403}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Aborting_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Aborting_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Auto" Id="{3de32530-42eb-4924-90cf-af6c4db39c4e}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Auto : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Auto := TRUE;
Auto := fb_mem.STS.Auto;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clear" Id="{317eb4c1-dd26-4fc3-9ad1-01bb1f98d886}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Clear : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Clear := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clearing_SC" Id="{9f05a99f-624c-465e-878e-f54db4026129}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Clearing_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Clearing_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Completing_SC" Id="{1bcf9784-5bcd-43d9-b48f-31129e0533dd}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Completing_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Completing_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Execute_SC" Id="{a4a0b4b3-25aa-4f68-970d-7630a42aa23c}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Execute_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Execute_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{bb9eb240-1942-4bca-86a2-4f174f21d3cc}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Hold" Id="{f1dd1fe1-f3d7-40f0-906a-c8d6bab2c883}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Hold : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Hold := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Holding_SC" Id="{ed8ba53c-b781-41b4-9526-4e77bb94145f}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Holding_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Holding_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Manueel" Id="{ef0b7851-5c06-402a-b160-6a9f79924c73}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Manueel : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Manueel := TRUE;
Manueel := fb_mem.STS.Manueel;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Reset" Id="{b6d002df-90b6-47e2-a808-48474815356a}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Reset : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Reset := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Resetting_SC" Id="{e0ed2391-3347-4ca3-9de7-30a202fe8c62}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Resetting_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Resetting_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Start" Id="{48ae3542-0f2e-415e-bb40-f811f8674eae}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Start : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Start := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Starting_SC" Id="{d323944a-b0ac-4433-907c-bf2daacc2c6a}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Starting_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Starting_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="State" Id="{5dfc3d61-b4c4-46e3-a627-12cb6b267db1}" FolderPath="Properties\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY State : E_State_PackML
]]></Declaration>
      <Get Name="Get" Id="{561168c5-4601-4861-9408-f30e5dbf64b3}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[State := fb_mem.STS.State;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Stop" Id="{a34b6112-22b7-461a-8f9c-ac2ad867328a}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Stop : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Stop := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Stopping_SC" Id="{a3ee1337-f2e7-4ce8-96b8-edb70c657eb8}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Stopping_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Stopping_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Suspend" Id="{e31fc0d0-8941-4f6e-bd23-ea0b85ff8a3d}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Suspend : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Suspend := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Suspending_SC" Id="{057a2c9a-35d8-4727-9d42-6f8d08151c2d}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Suspending_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Suspending_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Unhold" Id="{0bcff60c-456a-411a-861d-f3bcd39f68ec}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Unhold : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Unhold := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Unholding_SC" Id="{24ddc2c1-1d2f-4964-b739-aa1adba8765a}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Unholding_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Unholding_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Unsuspend" Id="{6e53f95b-74e8-4513-965f-fc7292f6cb78}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Unsuspend : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Unsuspend := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Unsuspending_SC" Id="{95bfa227-be7a-4f57-a533-60914ada5233}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Unsuspending_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Unsuspending_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="ZeroAllVar" Id="{f2032694-e612-411b-a380-5f4a137e6087}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD ZeroAllVar : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="EM_Can_Supply">
      <LineId Id="349" Count="53" />
      <LineId Id="594" Count="7" />
      <LineId Id="413" Count="0" />
      <LineId Id="528" Count="0" />
      <LineId Id="527" Count="0" />
      <LineId Id="530" Count="1" />
      <LineId Id="529" Count="0" />
      <LineId Id="539" Count="1" />
      <LineId Id="538" Count="0" />
      <LineId Id="542" Count="1" />
      <LineId Id="541" Count="0" />
      <LineId Id="545" Count="1" />
      <LineId Id="544" Count="0" />
      <LineId Id="414" Count="6" />
      <LineId Id="425" Count="0" />
      <LineId Id="508" Count="0" />
      <LineId Id="576" Count="0" />
      <LineId Id="578" Count="2" />
      <LineId Id="577" Count="0" />
      <LineId Id="426" Count="1" />
      <LineId Id="525" Count="0" />
      <LineId Id="532" Count="0" />
      <LineId Id="550" Count="0" />
      <LineId Id="554" Count="1" />
      <LineId Id="553" Count="0" />
      <LineId Id="557" Count="0" />
      <LineId Id="573" Count="0" />
      <LineId Id="556" Count="0" />
      <LineId Id="432" Count="0" />
      <LineId Id="507" Count="0" />
      <LineId Id="437" Count="0" />
      <LineId Id="505" Count="0" />
      <LineId Id="443" Count="0" />
      <LineId Id="504" Count="0" />
      <LineId Id="444" Count="1" />
      <LineId Id="451" Count="0" />
      <LineId Id="503" Count="0" />
      <LineId Id="456" Count="0" />
      <LineId Id="502" Count="0" />
      <LineId Id="457" Count="1" />
      <LineId Id="469" Count="0" />
      <LineId Id="501" Count="0" />
      <LineId Id="470" Count="1" />
      <LineId Id="482" Count="0" />
      <LineId Id="500" Count="0" />
      <LineId Id="483" Count="16" />
      <LineId Id="340" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Abort">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Aborting_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Auto">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Clear">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Clearing_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Completing_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Execute_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.FB_init">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Hold">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Holding_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Manueel">
      <LineId Id="4" Count="0" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Reset">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Resetting_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Start">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Starting_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.State.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Stop">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Stopping_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Suspend">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Suspending_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Unhold">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Unholding_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Unsuspend">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.Unsuspending_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Can_Supply.ZeroAllVar">
      <LineId Id="4" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>