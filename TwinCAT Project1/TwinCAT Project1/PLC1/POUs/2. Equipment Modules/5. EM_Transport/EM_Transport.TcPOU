<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="EM_Transport" Id="{b4839b78-b43e-43c9-b2a5-dfab2150ed70}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK EM_Transport IMPLEMENTS  ITF_EM_Transport, ITF_PackML

VAR
	fb_mem : STRUCT_EM_Transport;
	
	Motor		: CM_Motor;
	Sensor		: CM_Sensor;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*
$$$$$$$$\                                                                   $$\       $$$$$$$$\                     $$\                                         $$\                     
$$  _____|                                                                  $$ |      $$  _____|                    \__|                                        \__|                    
$$ |   $$$$$$\   $$$$$$\  $$$$$$$\  $$\  $$\  $$\  $$$$$$\   $$$$$$\   $$$$$$$ |      $$ |      $$$$$$$\   $$$$$$\  $$\ $$$$$$$\   $$$$$$\   $$$$$$\   $$$$$$\  $$\ $$$$$$$\   $$$$$$\  
$$$$$\ \____$$\ $$  __$$\ $$  __$$\ $$ | $$ | $$ |$$  __$$\ $$  __$$\ $$  __$$ |      $$$$$\    $$  __$$\ $$  __$$\ $$ |$$  __$$\ $$  __$$\ $$  __$$\ $$  __$$\ $$ |$$  __$$\ $$  __$$\ 
$$  __|$$$$$$$ |$$ |  \__|$$ |  $$ |$$ | $$ | $$ |$$ /  $$ |$$ /  $$ |$$ /  $$ |      $$  __|   $$ |  $$ |$$ /  $$ |$$ |$$ |  $$ |$$$$$$$$ |$$$$$$$$ |$$ |  \__|$$ |$$ |  $$ |$$ /  $$ |
$$ |  $$  __$$ |$$ |      $$ |  $$ |$$ | $$ | $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |      $$ |      $$ |  $$ |$$ |  $$ |$$ |$$ |  $$ |$$   ____|$$   ____|$$ |      $$ |$$ |  $$ |$$ |  $$ |
$$ |  \$$$$$$$ |$$ |      $$ |  $$ |\$$$$$\$$$$  |\$$$$$$  |\$$$$$$  |\$$$$$$$ |      $$$$$$$$\ $$ |  $$ |\$$$$$$$ |$$ |$$ |  $$ |\$$$$$$$\ \$$$$$$$\ $$ |      $$ |$$ |  $$ |\$$$$$$$ |
\__|   \_______|\__|      \__|  \__| \_____\____/  \______/  \______/  \_______|      \________|\__|  \__| \____$$ |\__|\__|  \__| \_______| \_______|\__|      \__|\__|  \__| \____$$ |
                                                                                                          $$\   $$ |                                                          $$\   $$ |
                                                                                                          \$$$$$$  |                                                          \$$$$$$  |
                                                                                                           \______/                                                            \______/ 
*)
//********************************Initiating***********************************
fb_mem.STS.State := PackML_StateMachine(State			:= fb_mem.STS.State,
										Start           := fb_mem.CS.Start,
										Stop            := fb_mem.CS.Stop,
										Reset           := fb_mem.CS.Reset,
										Abort           := fb_mem.CS.Abort,
										Clear           := fb_mem.CS.Clear,
										UnSuspend       := fb_mem.CS.UnSuspend,
										Suspend         := fb_mem.CS.Suspend,
										UnHold          := fb_mem.CS.UnHold,
										Hold            := fb_mem.CS.Hold,
										Starting_SC     := fb_mem.STS.Starting_SC,
										Execute_SC      := fb_mem.STS.Execute_SC,
										Resetting_SC    := fb_mem.STS.Resetting_SC,
										Holding_SC      := fb_mem.STS.Holding_SC,
										Unholding_SC    := fb_mem.STS.Unholding_SC,
										Suspending_SC   := fb_mem.STS.Suspending_SC,
										Unsuspending_SC := fb_mem.STS.Unsuspending_SC,
										Aborting_SC     := fb_mem.STS.Aborting_SC,
										Clearing_SC     := fb_mem.STS.Clearing_SC,
										Stopping_SC     := fb_mem.STS.Stopping_SC);
//********************************Init***********************************
Motor();
Sensor();
										
//********************************ZEROING***********************************		
(*							
fb_mem.STS.Auto 			:= FALSE;
fb_mem.STS.Manueel 			:= FALSE;
fb_mem.STS.Starting_SC 		:= FALSE;
fb_mem.STS.Execute_SC 		:= FALSE;
fb_mem.STS.Resetting_SC 	:= FALSE;
fb_mem.STS.Holding_SC 		:= FALSE;
fb_mem.STS.Unholding_SC 	:= FALSE;
fb_mem.STS.Suspending_SC 	:= FALSE;
fb_mem.STS.Unsuspending_SC 	:= FALSE;
fb_mem.STS.Aborting_SC 		:= FALSE;
fb_mem.STS.Clearing_SC 		:= FALSE;
fb_mem.STS.Stopping_SC 		:= FALSE;
fb_mem.STS.Completing_SC 	:= FALSE;
*)

//********************************Auto manual logic***********************************
IF fb_mem.CS.Auto THEN
	fb_mem.STS.Auto := TRUE;
	ELSE
		fb_mem.STS.Auto := FALSE;
END_IF

IF fb_mem.CS.Manueel THEN
	fb_mem.STS.Manueel := TRUE;
	ELSE
		fb_mem.STS.Manueel := FALSE;
END_IF

//********************************Exeptionhandling***********************************

//********************************Action case***********************************
CASE fb_mem.STS.State OF
	E_State_PackML.IDLE 			: 
		//Do nothing
	E_State_PackML.STARTING 		:
		Motor.Start();
		IF Motor.State = E_State_PackML.EXECUTE THEN
			fb_mem.STS.Starting_SC 		:= TRUE;	
		END_IF
	E_State_PackML.EXECUTE 			: 
		//Do nothing
	E_State_PackML.COMPLETE 		:
		Motor.Reset();
		IF Motor.State = E_State_PackML.RESETTING THEN
			fb_mem.STS.Completing_SC := TRUE;
		END_IF
	E_State_PackML.RESETTING 		:
		FB_init(0,0);
		Motor.FB_init(0,0);
		IF Motor.State = E_State_PackML.IDLE THEN
			fb_mem.STS.Resetting_SC 	:= TRUE;
		END_IF
	E_State_PackML.HOLDING 			:
		Motor.Stop();
		IF Motor.State = E_State_PackML.STOPPED THEN
			fb_mem.STS.Unholding_SC		:= TRUE;
		END_IF
	E_State_PackML.HELD 			:
		//Do nothing
	E_State_PackML.UNHOLDING 		:
		Motor.Reset();
		Motor.Reset();
		IF Motor.State = E_State_PackML.EXECUTE THEN
			fb_mem.STS.Unholding_SC		:= TRUE;
		END_IF
	E_State_PackML.SUSPENDING 		:
		Motor.Stop();
		IF Motor.State = E_State_PackML.STOPPED THEN
			fb_mem.STS.Suspending_SC 	:= TRUE;
		END_IF
	E_State_PackML.SUSPENDED 		:
		//Do nothing
	E_State_PackML.UNSUSPENDING 	:
		Motor.Reset();
		Motor.Reset();
		IF Motor.State = E_State_PackML.EXECUTE THEN
			fb_mem.CS.Unsuspend 		:= TRUE;
		END_IF
	E_State_PackML.ABORTING			:
		Motor.Abort();
		IF Motor.State = E_State_PackML.ABORTED THEN
			fb_mem.STS.Aborting_SC 		:= TRUE;
		END_IF
	E_State_PackML.ABORTED			:
		//Do nothing
	E_State_PackML.CLEARING 		:
		Motor.Clear();
		IF Motor.State = E_State_PackML.STOPPED THEN
			fb_mem.STS.Clearing_SC 		:= TRUE;
		END_IF
	E_State_PackML.STOPPING 		:
		IF Motor.State = E_State_PackML.STOPPED THEN
			fb_mem.STS.Stopping_SC 		:= TRUE;
		END_IF
	E_State_PackML.STOPPED 			:
		//Do nothing
END_CASE



//********************************ZEROING***********************************
//Control Signals 
(*
fb_mem.CS.Auto            := FALSE;
fb_mem.CS.Manueel         := FALSE;
fb_mem.CS.Start           := FALSE;
fb_mem.CS.Stop            := FALSE;
fb_mem.CS.Reset           := FALSE;
fb_mem.CS.Abort           := FALSE;
fb_mem.CS.Clear           := FALSE;
fb_mem.CS.UnSuspend       := FALSE;
fb_mem.CS.Suspend         := FALSE;
fb_mem.CS.UnHold          := FALSE;
fb_mem.CS.Hold            := FALSE;
*)]]></ST>
    </Implementation>
    <Folder Name="Methods" Id="{60ae86de-bafc-440d-bc9f-96901a1f7546}" />
    <Folder Name="Properties" Id="{8dc97ebe-3ace-4fdf-a1ba-2a3cf702ba1f}" />
    <Method Name="Abort" Id="{bbfdf4eb-6570-4a13-a46b-57e480ef120b}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Abort : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Abort := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Aborting_SC" Id="{8fc50448-f1f2-4e0c-8a72-b9cb3e36567e}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Aborting_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Aborting_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Auto" Id="{0e7aef80-4c85-478b-a934-c85e954995c2}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Auto : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Auto := TRUE;
fb_mem.CS.Manueel := FALSE;

Auto := fb_mem.STS.Auto;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clear" Id="{4bc6a9ab-0b4b-4eca-988f-8ccb82ec9a45}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Clear : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Clear := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clearing_SC" Id="{b148045c-cd6e-4b03-9f89-a120c7e9b391}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Clearing_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Clearing_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Completing_SC" Id="{5a776b9f-0e5f-4a47-816e-8d498528bb16}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Completing_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Completing_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Execute_SC" Id="{e65b1cb9-fa51-46f9-929e-dac6af8386bc}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Execute_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Execute_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{fef1f4a5-7c17-426e-92ad-ed7f8ff1b0d0}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD FB_init : BOOL
VAR_INPUT
	(* if TRUE, the retain variables are initialized (warm start / cold start)*)
	bInitRetains	: BOOL;
	(* if TRUE, the instance afterwards gets moved into the copy code (online change)*)
	bInCopyCode	: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Hold" Id="{f3cd4036-7e0c-4476-9fe9-610efdb989cd}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Hold : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Hold := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Holding_SC" Id="{bf48253a-7f00-433f-bd8e-dac1dd77a465}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Holding_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Holding_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Manueel" Id="{ede4cda6-f1de-40d8-8a49-f05d845e9d0c}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Manueel : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Manueel := TRUE;
fb_mem.CS.Auto := FALSE;

Manueel := fb_mem.STS.Manueel;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Reset" Id="{9693ed28-985a-456a-9662-9dcebab0097c}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Reset : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Reset := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Resetting_SC" Id="{8d281091-fe44-4095-8a17-7953d2fa6810}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Resetting_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Resetting_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="RPM" Id="{d26f9484-70ed-43f2-858c-07c0b43837bd}" FolderPath="Properties\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY RPM : INT
]]></Declaration>
      <Get Name="Get" Id="{56fdee3c-d30a-45a6-bc9a-95697aff9df6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{143a8ab9-f354-4ba7-88c1-f0978b1d945a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="Start" Id="{1baf41d7-4b14-4001-bcc1-77b5d5415aba}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Start : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Start := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Starting_SC" Id="{8f4eb6a6-b488-4fd3-81e5-f929a091d1b3}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Starting_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Starting_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="State" Id="{046af506-8cf0-46af-a509-5569994c5df0}" FolderPath="Properties\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY State : E_State_PackML
]]></Declaration>
      <Get Name="Get" Id="{027b1301-0c1f-44f4-a2eb-518122c4d3ed}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[State := fb_mem.STS.State;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Stop" Id="{14c6723a-9d9f-4490-91db-62f5947b6f7d}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Stop : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Stop := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Stopping_SC" Id="{0e917c7d-c2c6-4de0-9723-1f2c1a7b0b0e}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Stopping_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Stopping_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Suspend" Id="{aa09acce-0447-4fc2-8ad3-1029f3d40615}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Suspend : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Suspend := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Suspending_SC" Id="{5b7ceb42-39ff-4e22-aaf0-2e85b78849ff}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Suspending_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Suspending_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Tag" Id="{7b2c485a-3821-43e3-83a2-c27ca1c63059}" FolderPath="Properties\">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY Tag : STRING
]]></Declaration>
      <Get Name="Get" Id="{5aa24341-14dd-4f8f-bca1-bc219fc01e1b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Tag := fb_mem.STS.Tag;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Unhold" Id="{3167d149-a93f-4223-8d89-c088f2d59da7}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Unhold : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Unhold := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Unholding_SC" Id="{0a22e87d-935a-479d-94e5-839f753e0237}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Unholding_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Unholding_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Unsuspend" Id="{d3f7206f-77e9-492e-9706-92490e1bd093}" FolderPath="Methods\">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD Unsuspend : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.CS.Unsuspend := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Unsuspending_SC" Id="{f3cb3639-112b-4440-895c-62ae94513958}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Unsuspending_SC : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fb_mem.STS.Unsuspending_SC := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="ZeroAllVar" Id="{5e234a29-db91-4e63-8d3f-61453402a21d}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD ZeroAllVar : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="EM_Transport">
      <LineId Id="15" Count="11" />
      <LineId Id="9" Count="0" />
      <LineId Id="47" Count="1" />
      <LineId Id="488" Count="0" />
      <LineId Id="49" Count="17" />
      <LineId Id="394" Count="2" />
      <LineId Id="67" Count="1" />
      <LineId Id="490" Count="0" />
      <LineId Id="69" Count="12" />
      <LineId Id="491" Count="0" />
      <LineId Id="82" Count="15" />
      <LineId Id="115" Count="2" />
      <LineId Id="398" Count="0" />
      <LineId Id="121" Count="0" />
      <LineId Id="450" Count="0" />
      <LineId Id="399" Count="0" />
      <LineId Id="402" Count="0" />
      <LineId Id="401" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="452" Count="0" />
      <LineId Id="404" Count="0" />
      <LineId Id="406" Count="0" />
      <LineId Id="174" Count="0" />
      <LineId Id="177" Count="0" />
      <LineId Id="179" Count="0" />
      <LineId Id="453" Count="0" />
      <LineId Id="409" Count="0" />
      <LineId Id="411" Count="0" />
      <LineId Id="407" Count="0" />
      <LineId Id="412" Count="0" />
      <LineId Id="459" Count="0" />
      <LineId Id="458" Count="0" />
      <LineId Id="456" Count="1" />
      <LineId Id="200" Count="0" />
      <LineId Id="202" Count="0" />
      <LineId Id="420" Count="0" />
      <LineId Id="460" Count="1" />
      <LineId Id="421" Count="0" />
      <LineId Id="423" Count="0" />
      <LineId Id="203" Count="0" />
      <LineId Id="462" Count="0" />
      <LineId Id="465" Count="0" />
      <LineId Id="425" Count="0" />
      <LineId Id="427" Count="0" />
      <LineId Id="206" Count="0" />
      <LineId Id="235" Count="0" />
      <LineId Id="473" Count="0" />
      <LineId Id="468" Count="4" />
      <LineId Id="264" Count="0" />
      <LineId Id="475" Count="0" />
      <LineId Id="478" Count="0" />
      <LineId Id="476" Count="1" />
      <LineId Id="474" Count="0" />
      <LineId Id="266" Count="0" />
      <LineId Id="436" Count="0" />
      <LineId Id="442" Count="0" />
      <LineId Id="479" Count="0" />
      <LineId Id="443" Count="0" />
      <LineId Id="445" Count="0" />
      <LineId Id="299" Count="0" />
      <LineId Id="446" Count="1" />
      <LineId Id="449" Count="0" />
      <LineId Id="315" Count="0" />
      <LineId Id="340" Count="0" />
      <LineId Id="397" Count="0" />
      <LineId Id="378" Count="0" />
      <LineId Id="113" Count="1" />
      <LineId Id="99" Count="1" />
      <LineId Id="379" Count="0" />
      <LineId Id="489" Count="0" />
      <LineId Id="101" Count="9" />
      <LineId Id="32" Count="0" />
      <LineId Id="381" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Abort">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Aborting_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Auto">
      <LineId Id="5" Count="1" />
      <LineId Id="10" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Clear">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Clearing_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Completing_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Execute_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.FB_init">
      <LineId Id="10" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Hold">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Holding_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Manueel">
      <LineId Id="4" Count="1" />
      <LineId Id="9" Count="0" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Reset">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Resetting_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.RPM.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.RPM.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Start">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Starting_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.State.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Stop">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Stopping_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Suspend">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Suspending_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Tag.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Unhold">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Unholding_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Unsuspend">
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.Unsuspending_SC">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="EM_Transport.ZeroAllVar">
      <LineId Id="4" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>