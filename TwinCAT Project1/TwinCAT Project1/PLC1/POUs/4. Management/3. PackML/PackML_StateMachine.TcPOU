<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="PackML_StateMachine" Id="{1dc17e84-2765-4770-878c-06b6f6878d93}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION PackML_StateMachine : E_State_PackML
VAR_INPUT
	State		: E_State_PackML;
	Start		: BOOL;
	Stop		: BOOL;
	Reset		: BOOL;
	Abort		: BOOL;
	Clear		: BOOL;
	UnSuspend	: BOOL;
	Suspend		: BOOL;
	UnHold		: BOOL;
	Hold		: BOOL;
	
	Starting_SC 	: BOOL;
	Execute_SC 		: BOOL;
	Resetting_SC 	: BOOL;
	Holding_SC 		: BOOL;
	Unholding_SC 	: BOOL;
	Suspending_SC	: BOOL;
	Unsuspending_SC	: BOOL;
	Aborting_SC		: BOOL;
	Clearing_SC		: BOOL;
	Completing_SC	: BOOL;
	Stopping_SC		: BOOL;
END_VAR
VAR
	bFirstCylceBit	: BOOL := TRUE;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*
$$$$$$$$\                                                                   $$\       $$$$$$$$\                     $$\                                         $$\                     
$$  _____|                                                                  $$ |      $$  _____|                    \__|                                        \__|                    
$$ |   $$$$$$\   $$$$$$\  $$$$$$$\  $$\  $$\  $$\  $$$$$$\   $$$$$$\   $$$$$$$ |      $$ |      $$$$$$$\   $$$$$$\  $$\ $$$$$$$\   $$$$$$\   $$$$$$\   $$$$$$\  $$\ $$$$$$$\   $$$$$$\  
$$$$$\ \____$$\ $$  __$$\ $$  __$$\ $$ | $$ | $$ |$$  __$$\ $$  __$$\ $$  __$$ |      $$$$$\    $$  __$$\ $$  __$$\ $$ |$$  __$$\ $$  __$$\ $$  __$$\ $$  __$$\ $$ |$$  __$$\ $$  __$$\ 
$$  __|$$$$$$$ |$$ |  \__|$$ |  $$ |$$ | $$ | $$ |$$ /  $$ |$$ /  $$ |$$ /  $$ |      $$  __|   $$ |  $$ |$$ /  $$ |$$ |$$ |  $$ |$$$$$$$$ |$$$$$$$$ |$$ |  \__|$$ |$$ |  $$ |$$ /  $$ |
$$ |  $$  __$$ |$$ |      $$ |  $$ |$$ | $$ | $$ |$$ |  $$ |$$ |  $$ |$$ |  $$ |      $$ |      $$ |  $$ |$$ |  $$ |$$ |$$ |  $$ |$$   ____|$$   ____|$$ |      $$ |$$ |  $$ |$$ |  $$ |
$$ |  \$$$$$$$ |$$ |      $$ |  $$ |\$$$$$\$$$$  |\$$$$$$  |\$$$$$$  |\$$$$$$$ |      $$$$$$$$\ $$ |  $$ |\$$$$$$$ |$$ |$$ |  $$ |\$$$$$$$\ \$$$$$$$\ $$ |      $$ |$$ |  $$ |\$$$$$$$ |
\__|   \_______|\__|      \__|  \__| \_____\____/  \______/  \______/  \_______|      \________|\__|  \__| \____$$ |\__|\__|  \__| \_______| \_______|\__|      \__|\__|  \__| \____$$ |
                                                                                                          $$\   $$ |                                                          $$\   $$ |
                                                                                                          \$$$$$$  |                                                          \$$$$$$  |
                                                                                                           \______/                                                            \______/ 
*)
CASE State OF
	E_State_PackML.IDLE 			:
		//HAPPY FLOW		
		IF Start AND NOT Abort THEN
			State := E_State_PackML.STARTING;
		END_IF
		
		//EXEPTION HANDLING
		IF Abort THEN
			State:= E_State_PackML.ABORTING;
		END_IF
		IF Stop THEN
			State:= E_State_PackML.STOPPING;
		END_IF
	
	E_State_PackML.STARTING 		:
		//HAPPY FLOW		
		IF Starting_SC AND NOT Abort THEN
			State:= E_State_PackML.EXECUTE;
		END_IF
		
		//EXEPTION HANDLING
		IF Abort THEN
			State:= E_State_PackML.ABORTING;
		END_IF
		IF Stop THEN
			State:= E_State_PackML.STOPPING;
		END_IF
	
	E_State_PackML.EXECUTE 			:
		//HAPPY FLOW		
		IF Execute_SC AND NOT Abort THEN
			State := E_State_PackML.COMPLETING;
		END_IF
		
		IF Hold THEN
			State := E_State_PackML.HOLDING;
		END_IF
		
		IF Suspend THEN
			State := E_State_PackML.SUSPENDING;
		END_IF
		
		//EXEPTION HANDLING
		IF Abort THEN
			State:= E_State_PackML.ABORTING;
		END_IF
		IF Stop THEN
			State:= E_State_PackML.STOPPING;
		END_IF
	E_State_PackML.COMPLETING		:
		//HAPPY FLOW
		IF Completing_SC THEN
			State := E_State_PackML.COMPLETE;
		END_IF
		//EXEPTION HANDLING
		IF Abort THEN
			State := E_State_PackML.ABORTING;
		END_IF
		IF Stop	THEN
			State := E_State_PackML.STOPPING;
		END_IF
	E_State_PackML.COMPLETE 		:
		//HAPPY FLOW
		IF Reset AND NOT ABORT THEN
			State:= E_State_PackML.RESETTING;
		END_IF
		//EXEPTION HANDLING
		IF Abort THEN
			State := E_State_PackML.ABORTING;
		END_IF
		IF Stop	THEN
			State := E_State_PackML.STOPPING;
		END_IF
	
	E_State_PackML.RESETTING 		:
		//HAPPY FLOW		
		IF Resetting_SC AND NOT Abort THEN
			State:= E_State_PackML.IDLE;
		END_IF
		
		//EXEPTION HANDLING
		IF Abort THEN
			State:= E_State_PackML.ABORTING;
		END_IF
		IF Stop THEN
			State:= E_State_PackML.STOPPING;
		END_IF
	
	E_State_PackML.HOLDING 			:
		//HAPPY FLOW		
		IF Holding_SC AND NOT Abort THEN
			State:= E_State_PackML.HELD;
		END_IF
		
		//EXEPTION HANDLING
		IF Abort THEN
			State:= E_State_PackML.ABORTING;
		END_IF
		IF Stop THEN
			State:= E_State_PackML.STOPPING;
		END_IF
		
	
	E_State_PackML.HELD 			:
		//HAPPY FLOW		
		IF Unhold AND NOT Abort THEN
			State := E_State_PackML.UNHOLDING;
		END_IF
		
		//EXEPTION HANDLING
		IF Abort THEN
			State:= E_State_PackML.ABORTING;
		END_IF
		IF Stop THEN
			State:= E_State_PackML.STOPPING;
		END_IF
	
	E_State_PackML.UNHOLDING 		:
		//HAPPY FLOW		
		IF Unholding_SC AND NOT Abort THEN
			State:= E_State_PackML.EXECUTE;
		END_IF
		
		//EXEPTION HANDLING
		IF Abort THEN
			State:= E_State_PackML.ABORTING;
		END_IF
		IF Stop THEN
			State:= E_State_PackML.STOPPING;
		END_IF
	
	E_State_PackML.SUSPENDING 		:
		//HAPPY FLOW		
		IF Suspending_SC AND NOT Abort THEN
			State:= E_State_PackML.SUSPENDED;
		END_IF
		
		//EXEPTION HANDLING
		IF Abort THEN
			State:= E_State_PackML.ABORTING;
		END_IF
		IF Stop THEN
			State:= E_State_PackML.STOPPING;
		END_IF
	
	
	E_State_PackML.SUSPENDED 		:
		//HAPPY FLOW		
		IF Unsuspend AND NOT Abort THEN
			State:= E_State_PackML.UNSUSPENDING;
		END_IF
		
		//EXEPTION HANDLING
		IF Abort THEN
			State:= E_State_PackML.ABORTING;
		END_IF
		IF Stop THEN
			State:= E_State_PackML.STOPPING;
		END_IF
	
	E_State_PackML.UNSUSPENDING 	:
		//HAPPY FLOW		
		IF Unsuspending_SC AND NOT Abort THEN
			State:= E_State_PackML.EXECUTE;
		END_IF
		
		//EXEPTION HANDLING
		IF Abort THEN
			State:= E_State_PackML.ABORTING;
		END_IF
		IF Stop THEN
			State:= E_State_PackML.STOPPING;
		END_IF
	
	E_State_PackML.ABORTED			:
		//HAPPY FLOW		
		IF Clear THEN
			State:= E_State_PackML.CLEARING;
		END_IF
	
		
	E_State_PackML.ABORTING			:
		//HAPPY FLOW		
		IF Aborting_SC THEN
			State:= E_State_PackML.ABORTED;
		END_IF
	
		
	E_State_PackML.CLEARING 		:
		//HAPPY FLOW		
		IF Clearing_SC THEN
			State:= E_State_PackML.STOPPED;
		END_IF
		
		//EXEPTION HANDLING
		IF Abort THEN
			State:= E_State_PackML.ABORTING;
		END_IF
		
		
	E_State_PackML.STOPPING 		:
		//HAPPY FLOW
		IF Stopping_SC THEN
			State:= E_State_PackML.STOPPED;
		END_IF
		
		//EXEPTION HANDLING
		IF Abort THEN
			State:= E_State_PackML.ABORTING;
		END_IF
		
	
	E_State_PackML.STOPPED 			: 
		//HAPPY FLOW
		IF Reset AND NOT Abort THEN
			State := E_State_PackML.RESETTING;
		END_IF
		
		//EXEPTION HANDLING
		IF Abort THEN
			State:= E_State_PackML.ABORTING;
		END_IF
		IF Stop THEN
			State:= E_State_PackML.STOPPING;
		END_IF
END_CASE

PackML_StateMachine := State;

]]></ST>
    </Implementation>
    <LineIds Name="PackML_StateMachine">
      <LineId Id="8" Count="12" />
      <LineId Id="22" Count="50" />
      <LineId Id="321" Count="1" />
      <LineId Id="331" Count="1" />
      <LineId Id="323" Count="3" />
      <LineId Id="328" Count="2" />
      <LineId Id="73" Count="1" />
      <LineId Id="315" Count="0" />
      <LineId Id="318" Count="0" />
      <LineId Id="333" Count="6" />
      <LineId Id="317" Count="0" />
      <LineId Id="76" Count="147" />
      <LineId Id="312" Count="2" />
      <LineId Id="224" Count="0" />
      <LineId Id="228" Count="0" />
      <LineId Id="284" Count="0" />
      <LineId Id="283" Count="0" />
      <LineId Id="251" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>